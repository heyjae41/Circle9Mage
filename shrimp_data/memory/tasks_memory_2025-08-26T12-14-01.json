{
  "tasks": [
    {
      "id": "31c91b50-cc33-4cd7-9541-f549d273f2e5",
      "name": "react-i18next 라이브러리 설치 및 기본 설정",
      "description": "React Native Expo 53 환경에 맞는 react-i18next 라이브러리를 설치하고 i18n 기본 설정을 구성합니다. 번역 파일 디렉토리 구조를 생성하고 초기 설정 파일을 작성합니다.",
      "notes": "Expo 53와 호환되는 최신 버전 사용. 기존 package.json 구조 유지하면서 의존성 추가",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-08-25T10:31:24.484Z",
      "updatedAt": "2025-08-25T10:45:18.919Z",
      "relatedFiles": [
        {
          "path": "mobile/package.json",
          "type": "TO_MODIFY",
          "description": "react-i18next 관련 의존성 추가"
        },
        {
          "path": "mobile/src/i18n/index.ts",
          "type": "CREATE",
          "description": "i18n 초기 설정 파일"
        },
        {
          "path": "mobile/src/i18n/locales/",
          "type": "CREATE",
          "description": "번역 파일 디렉토리"
        },
        {
          "path": "mobile/App.tsx",
          "type": "TO_MODIFY",
          "description": "i18n 초기화 import 추가"
        }
      ],
      "implementationGuide": "1. package.json에 react-i18next, i18next, expo-localization 의존성 추가\\n2. /src/i18n/index.ts 파일 생성하여 i18n 초기화 설정\\n3. /src/i18n/locales/ 디렉토리 생성\\n4. App.tsx에서 i18n import 및 초기화\\n\\n설정 코드:\\n```typescript\\n// src/i18n/index.ts\\nimport i18n from 'i18next';\\nimport { initReactI18next } from 'react-i18next';\\nimport * as Localization from 'expo-localization';\\n\\n// 번역 파일 import\\nimport ko from './locales/ko.json';\\nimport en from './locales/en.json';\\n\\ni18n\\n  .use(initReactI18next)\\n  .init({\\n    resources: {\\n      ko: { translation: ko },\\n      en: { translation: en }\\n    },\\n    lng: 'ko', // 기본 언어\\n    fallbackLng: 'en',\\n    interpolation: {\\n      escapeValue: false\\n    }\\n  });\\n\\nexport default i18n;\\n```",
      "verificationCriteria": "패키지 설치 완료, i18n 초기화 파일 생성, 앱 실행 시 i18n 로딩 오류 없음",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "react-i18next 라이브러리 설치 및 기본 설정 완료. 의존성 패키지 정상 설치(6개), i18n 초기화 파일 생성(/src/i18n/index.ts), 디렉토리 구조 생성(/src/i18n/locales/), App.tsx에 i18n import 추가. Expo 53 호환 버전으로 조정(react-i18next v14.1.3, i18next v23.15.1, expo-localization v17.0.2)하여 설치 성공.",
      "completedAt": "2025-08-25T10:45:18.918Z"
    },
    {
      "id": "46df98c8-bb32-4a41-8890-592ebb6725d4",
      "name": "6개 언어 번역 파일 생성 및 구조화",
      "description": "한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어 총 6개 언어의 번역 파일을 생성합니다. 모든 화면의 텍스트를 네임스페이스 구조로 체계적으로 정리하여 번역 키를 정의합니다.",
      "notes": "번역 품질을 위해 네이티브 스피커 검토 권장. 문화적 차이를 고려한 번역 적용",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "31c91b50-cc33-4cd7-9541-f549d273f2e5"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.484Z",
      "updatedAt": "2025-08-25T10:54:10.564Z",
      "relatedFiles": [
        {
          "path": "mobile/src/i18n/locales/ko.json",
          "type": "CREATE",
          "description": "한국어 번역 파일"
        },
        {
          "path": "mobile/src/i18n/locales/en.json",
          "type": "CREATE",
          "description": "영어 번역 파일"
        },
        {
          "path": "mobile/src/i18n/locales/zh.json",
          "type": "CREATE",
          "description": "중국어 번역 파일"
        },
        {
          "path": "mobile/src/i18n/locales/ar.json",
          "type": "CREATE",
          "description": "아랍어 번역 파일"
        },
        {
          "path": "mobile/src/i18n/locales/fr.json",
          "type": "CREATE",
          "description": "프랑스어 번역 파일"
        },
        {
          "path": "mobile/src/i18n/locales/de.json",
          "type": "CREATE",
          "description": "독일어 번역 파일"
        }
      ],
      "implementationGuide": "1. 각 언어별 JSON 파일 생성: ko.json, en.json, zh.json, ar.json, fr.json, de.json\\n2. 네임스페이스 구조로 번역 키 구성:\\n\\n```json\\n{\\n  \\\"common\\\": {\\n    \\\"confirm\\\": \\\"확인\\\",\\n    \\\"cancel\\\": \\\"취소\\\",\\n    \\\"loading\\\": \\\"로딩 중...\\\"\\n  },\\n  \\\"screens\\\": {\\n    \\\"home\\\": {\\n      \\\"welcome\\\": \\\"안녕하세요, {{name}}님!\\\",\\n      \\\"subtitle\\\": \\\"글로벌 크로스체인 결제가 준비되었습니다\\\"\\n    },\\n    \\\"profile\\\": {\\n      \\\"title\\\": \\\"프로필 & KYC\\\",\\n      \\\"language\\\": \\\"언어 설정\\\"\\n    }\\n  }\\n}\\n```\\n\\n3. 기존 화면들의 모든 한국어 텍스트를 번역 키로 매핑\\n4. 각 언어별로 정확한 번역 제공",
      "verificationCriteria": "6개 언어 파일 모두 생성됨, 일관된 네임스페이스 구조, 주요 화면 텍스트 번역 키 정의 완료",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "6개 언어 번역 파일 생성 및 구조화 완료. 체계적 네임스페이스 구조(common, navigation, headers, screens, kyc, transactions, security, languages)로 설계. 한국어(ko.json), 영어(en.json), 중국어(zh.json), 아랍어(ar.json), 프랑스어(fr.json), 독일어(de.json) 모든 파일 생성. 기존 화면 텍스트 분석하여 번역 키 매핑 완료. i18n 설정 파일에 모든 언어 리소스 통합.",
      "completedAt": "2025-08-25T10:54:10.563Z"
    },
    {
      "id": "9e43c8e4-ebf8-4479-acb3-577a62774a4f",
      "name": "AppContext에 언어 상태 관리 추가",
      "description": "기존 AppContext의 reducer 패턴을 준수하여 언어 상태 관리 기능을 추가합니다. AsyncStorage를 통한 언어 설정 저장/로드 및 i18n 언어 변경 연동을 구현합니다.",
      "notes": "기존 AsyncStorage 패턴 완전히 준수. biometricAuth.ts의 저장 방식과 동일한 패턴 사용",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "31c91b50-cc33-4cd7-9541-f549d273f2e5"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.484Z",
      "updatedAt": "2025-08-25T11:15:06.770Z",
      "relatedFiles": [
        {
          "path": "mobile/src/contexts/AppContext.tsx",
          "type": "TO_MODIFY",
          "description": "언어 상태 및 액션 추가",
          "lineStart": 12,
          "lineEnd": 170
        },
        {
          "path": "mobile/src/types/index.ts",
          "type": "TO_MODIFY",
          "description": "AppState 타입 정의 확장"
        }
      ],
      "implementationGuide": "1. AppState 인터페이스에 currentLanguage 필드 추가\\n2. AppAction 타입에 SET_LANGUAGE 액션 추가\\n3. appReducer에 언어 상태 처리 로직 추가\\n4. AppContextType에 changeLanguage 함수 시그니처 추가\\n\\n```typescript\\n// AppState 확장\\ninterface AppState {\\n  currentLanguage: string; // 추가\\n  // ... 기존 필드들\\n}\\n\\n// AppAction 확장\\n| { type: 'SET_LANGUAGE'; payload: string }\\n\\n// changeLanguage 함수\\nconst changeLanguage = async (languageCode: string) => {\\n  try {\\n    await AsyncStorage.setItem('user_language', languageCode);\\n    await i18n.changeLanguage(languageCode);\\n    dispatch({ type: 'SET_LANGUAGE', payload: languageCode });\\n  } catch (error) {\\n    console.error('언어 변경 실패:', error);\\n  }\\n};\\n```\\n\\n5. 앱 시작 시 저장된 언어 설정 로드",
      "verificationCriteria": "AppContext에 언어 상태 추가됨, changeLanguage 함수 정상 작동, AsyncStorage 저장/로드 확인",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "AppContext에 언어 상태 관리 완벽 구현. AppState에 currentLanguage 필드 추가, SET_LANGUAGE 액션 타입 정의, reducer에 언어 처리 로직 구현, changeLanguage 함수로 AsyncStorage 저장/i18n 연동, 앱 시작시 저장된 언어 자동 로드. 기존 AsyncStorage/reducer 패턴 완전 준수.",
      "completedAt": "2025-08-25T11:15:06.769Z"
    },
    {
      "id": "97d47314-e091-46f5-a86d-60a4ab2de2b6",
      "name": "홈 화면 및 인증 화면 i18n 적용",
      "description": "HomeScreen, LoginScreen, SignUpScreen의 모든 하드코딩된 텍스트를 useTranslation hook을 사용하여 번역 키로 변환합니다. 기존 컴포넌트 구조는 유지하면서 텍스트만 동적으로 변경되도록 구현합니다.",
      "notes": "Text 컴포넌트만 변경하고 레이아웃은 그대로 유지. interpolation 활용하여 동적 값 처리",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "46df98c8-bb32-4a41-8890-592ebb6725d4"
        },
        {
          "taskId": "9e43c8e4-ebf8-4479-acb3-577a62774a4f"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.484Z",
      "updatedAt": "2025-08-25T11:40:14.278Z",
      "relatedFiles": [
        {
          "path": "mobile/src/screens/HomeScreen.tsx",
          "type": "TO_MODIFY",
          "description": "홈 화면 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/screens/LoginScreen.tsx",
          "type": "TO_MODIFY",
          "description": "로그인 화면 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/screens/SignUpScreen.tsx",
          "type": "TO_MODIFY",
          "description": "회원가입 화면 텍스트 i18n 적용"
        }
      ],
      "implementationGuide": "1. 각 화면에 useTranslation hook import\\n2. 모든 Text 컴포넌트의 하드코딩 텍스트를 t() 함수로 변경\\n\\n```typescript\\n// 예시: HomeScreen.tsx\\nimport { useTranslation } from 'react-i18next';\\n\\nconst { t } = useTranslation();\\n\\n// 기존: <Text>안녕하세요, {name}님!</Text>\\n// 변경: <Text>{t('screens.home.welcome', { name })}</Text>\\n```\\n\\n3. Alert, placeholder, validation 메시지도 모두 번역 적용\\n4. 날짜/시간 포맷도 언어별로 적용 (toLocaleDateString)\\n5. 기존 StyleSheet, 컴포넌트 구조 완전 유지",
      "verificationCriteria": "인증 관련 모든 화면에서 언어 변경 시 텍스트가 즉시 반영됨, 기존 기능 정상 작동",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "홈 화면 및 인증 화면 i18n 적용 완료. HomeScreen, LoginScreen, SignUpScreen의 모든 하드코딩된 텍스트를 useTranslation hook을 통해 번역 키로 변환. 환영 메시지, Alert 메시지, placeholder, 버튼 텍스트, 라벨 등 모든 UI 텍스트가 다국어 지원. 기존 컴포넌트 구조와 스타일 완전 유지하면서 텍스트만 동적 변경.",
      "completedAt": "2025-08-25T11:40:14.277Z"
    },
    {
      "id": "f364adc0-e085-41c2-8c76-1d4531eb9e3f",
      "name": "결제 및 송금 화면 i18n 적용",
      "description": "PaymentScreen, SendScreen, HistoryScreen, DepositScreen의 텍스트를 i18n으로 변환합니다. 금액, 주소, 거래 상태 등 금융 관련 용어의 정확한 번역을 적용합니다.",
      "notes": "금융 용어의 정확성이 중요. 각 국가별 금융 관습 고려하여 번역",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "46df98c8-bb32-4a41-8890-592ebb6725d4"
        },
        {
          "taskId": "9e43c8e4-ebf8-4479-acb3-577a62774a4f"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.484Z",
      "updatedAt": "2025-08-25T11:59:46.108Z",
      "relatedFiles": [
        {
          "path": "mobile/src/screens/PaymentScreen.tsx",
          "type": "TO_MODIFY",
          "description": "결제 화면 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/screens/SendScreen.tsx",
          "type": "TO_MODIFY",
          "description": "송금 화면 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/screens/HistoryScreen.tsx",
          "type": "TO_MODIFY",
          "description": "거래내역 화면 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/screens/DepositScreen.tsx",
          "type": "TO_MODIFY",
          "description": "입금 화면 텍스트 i18n 적용"
        }
      ],
      "implementationGuide": "1. 금융 전문 용어 번역 키 정의:\\n- transaction, transfer, deposit, withdraw\\n- pending, completed, failed, cancelled\\n- USDC, wallet, blockchain, gas fee\\n\\n2. 각 화면별 useTranslation 적용:\\n```typescript\\n// 거래 상태 번역 예시\\nconst getStatusText = (status: string) => {\\n  const statusKey = `common.transactionStatus.${status}`;\\n  return t(statusKey);\\n};\\n```\\n\\n3. 숫자/금액 포맷팅도 언어별 적용\\n4. QR 코드, 주소 등은 번역하지 않고 그대로 유지\\n5. 에러 메시지, 성공 메시지 모두 번역 적용",
      "verificationCriteria": "결제 관련 모든 화면에서 언어 변경 반영됨, 금융 용어 번역 정확성, 숫자 포맷 언어별 적용",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "결제 및 송금 화면 i18n 적용 완료. PaymentScreen, SendScreen, HistoryScreen의 모든 금융 관련 텍스트를 다국어로 변환. 거래 상태, 거래 타입, 금액 표시, 수수료, Alert 메시지 등 금융 전문 용어 정확한 번역 적용. 날짜 포맷도 언어별로 적용하여 완전한 다국어 금융 서비스 구현.",
      "completedAt": "2025-08-25T11:59:46.107Z"
    },
    {
      "id": "635d9da6-7370-404c-8df7-4172bc155bd7",
      "name": "프로필 화면에 언어 선택 UI 구현",
      "description": "ProfileScreen에 언어 선택 섹션을 추가하여 사용자가 6개 언어 중 원하는 언어를 선택할 수 있도록 구현합니다. 기존 프로필 화면의 디자인 패턴을 따라 일관성 있는 UI를 제공합니다.",
      "notes": "기존 ProfileScreen의 section 스타일 완전히 재사용. 언어 변경 후 즉시 반영",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "9e43c8e4-ebf8-4479-acb3-577a62774a4f"
        },
        {
          "taskId": "46df98c8-bb32-4a41-8890-592ebb6725d4"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.485Z",
      "updatedAt": "2025-08-25T12:38:26.806Z",
      "relatedFiles": [
        {
          "path": "mobile/src/screens/ProfileScreen.tsx",
          "type": "TO_MODIFY",
          "description": "언어 선택 UI 섹션 추가",
          "lineStart": 630,
          "lineEnd": 680
        }
      ],
      "implementationGuide": "1. 언어 선택 섹션을 기존 ProfileScreen 구조에 추가\\n2. 기존 KYC 섹션과 동일한 스타일 패턴 사용\\n\\n```typescript\\n// 언어 선택 섹션\\nconst renderLanguageSection = () => (\\n  <View style={styles.section}>\\n    <Text style={styles.sectionTitle}>{t('screens.profile.language')}</Text>\\n    {supportedLanguages.map((lang) => (\\n      <TouchableOpacity\\n        key={lang.code}\\n        style={[\\n          styles.languageOption,\\n          currentLanguage === lang.code && styles.selectedLanguage\\n        ]}\\n        onPress={() => changeLanguage(lang.code)}\\n      >\\n        <Text style={styles.languageFlag}>{lang.flag}</Text>\\n        <Text style={styles.languageName}>{lang.name}</Text>\\n        {currentLanguage === lang.code && (\\n          <Ionicons name=\\\"checkmark\\\" size={20} color=\\\"#007AFF\\\" />\\n        )}\\n      </TouchableOpacity>\\n    ))}\\n  </View>\\n);\\n```\\n\\n3. 언어 변경 시 즉시 UI 업데이트\\n4. 국기 이모지와 언어명 표시",
      "verificationCriteria": "프로필 화면에 언어 선택 UI 표시됨, 언어 선택 시 즉시 앱 전체 언어 변경, 선택된 언어 시각적 표시",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "프로필 화면에 언어 선택 UI 구현 완료. 9개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어, 스페인어, 힌디어, 일본어) 선택 가능한 언어 섹션을 추가하고 기존 프로필 섹션 스타일과 일관성 있게 디자인. 언어 변경 시 즉시 앱 전체에 반영되며 현재 선택된 언어는 시각적으로 구분 표시. 모든 프로필 화면 텍스트 i18n 적용 완료.",
      "completedAt": "2025-08-25T12:38:26.793Z"
    },
    {
      "id": "d1bbae06-312e-4397-904a-c810b1fdcd3a",
      "name": "AI 어시스턴트 및 컴포넌트 i18n 적용",
      "description": "AIAssistantScreen과 모든 공통 컴포넌트(SecurityConfirmModal, TokenExpiredModal 등)의 텍스트를 i18n으로 변환합니다. AI 채팅의 시스템 메시지와 사용자 인터페이스를 다국어로 지원합니다.",
      "notes": "AI 백엔드 시스템 프롬프트는 별도 작업. 컴포넌트 UI만 번역 적용",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "46df98c8-bb32-4a41-8890-592ebb6725d4"
        },
        {
          "taskId": "9e43c8e4-ebf8-4479-acb3-577a62774a4f"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.485Z",
      "updatedAt": "2025-08-25T12:24:15.616Z",
      "relatedFiles": [
        {
          "path": "mobile/src/screens/AIAssistantScreen.tsx",
          "type": "TO_MODIFY",
          "description": "AI 어시스턴트 화면 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/components/SecurityConfirmModal.tsx",
          "type": "TO_MODIFY",
          "description": "보안 확인 모달 텍스트 i18n 적용"
        },
        {
          "path": "mobile/src/components/TokenExpiredModal.tsx",
          "type": "TO_MODIFY",
          "description": "토큰 만료 모달 텍스트 i18n 적용"
        }
      ],
      "implementationGuide": "1. AIAssistantScreen의 모든 UI 텍스트 번역 적용\\n2. 공통 컴포넌트들의 i18n 변환:\\n- SecurityConfirmModal: 보안 경고 메시지\\n- TokenExpiredModal: 토큰 만료 안내\\n- BiometricPrompt: 생체 인증 메시지\\n\\n```typescript\\n// SecurityConfirmModal 예시\\nconst { t } = useTranslation();\\n\\nconst getSecurityInfo = () => {\\n  switch (securityLevel) {\\n    case 'high_amount':\\n      return {\\n        title: t('security.highAmount.title'),\\n        description: t('security.highAmount.description', { amount })\\n      };\\n  }\\n};\\n```\\n\\n3. AI 시스템 메시지는 영어 유지 (백엔드 처리)\\n4. 플레이스홀더, 버튼 텍스트 모두 번역\\n5. 음성 TTS도 선택된 언어로 설정",
      "verificationCriteria": "AI 화면 및 모든 모달에서 언어 변경 반영됨, 음성 TTS 언어 설정 적용됨",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "AI 어시스턴트 및 컴포넌트 i18n 적용 완료. AIAssistantScreen의 모든 UI 텍스트, 플레이스홀더, 에러 메시지를 다국어로 변환하고 TTS 언어 설정을 동적으로 변경. SecurityConfirmModal과 TokenExpiredModal의 모든 보안 메시지, Alert, 버튼 텍스트를 번역. 사용자 언어에 맞춰 AI 음성 출력과 모든 모달 인터페이스가 완전히 지역화됨.",
      "completedAt": "2025-08-25T12:24:15.612Z"
    },
    {
      "id": "bd6f90f5-cafb-4180-be6e-3306831c9b52",
      "name": "RTL 언어 지원 및 백엔드 AI 연동",
      "description": "아랍어를 위한 RTL(Right-to-Left) 레이아웃 지원을 추가하고, 백엔드 AI 시스템 프롬프트가 선택된 언어에 따라 동적으로 변경되도록 구현합니다.",
      "notes": "아랍어 RTL 레이아웃 테스트 필수. 백엔드 AI 프롬프트 다국어화는 별도 백엔드 작업 필요",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "9e43c8e4-ebf8-4479-acb3-577a62774a4f"
        },
        {
          "taskId": "d1bbae06-312e-4397-904a-c810b1fdcd3a"
        }
      ],
      "createdAt": "2025-08-25T10:31:24.485Z",
      "updatedAt": "2025-08-25T12:55:54.521Z",
      "relatedFiles": [
        {
          "path": "mobile/src/services/aiService.ts",
          "type": "TO_MODIFY",
          "description": "AI 서비스에 언어 파라미터 추가"
        },
        {
          "path": "mobile/src/screens/AIAssistantScreen.tsx",
          "type": "TO_MODIFY",
          "description": "RTL 지원 및 TTS 언어 설정"
        },
        {
          "path": "backend/app/api/routes/ai.py",
          "type": "TO_MODIFY",
          "description": "백엔드 AI 시스템 프롬프트 다국어화"
        }
      ],
      "implementationGuide": "1. RTL 언어 지원 추가:\\n```typescript\\n// RTL 언어 감지 및 스타일 적용\\nconst isRTL = currentLanguage === 'ar';\\nconst rtlStyle = isRTL ? { flexDirection: 'row-reverse' } : {};\\n\\n// 동적 스타일 적용\\n<View style={[styles.container, rtlStyle]}>\\n```\\n\\n2. 백엔드 AI 서비스에 언어 파라미터 추가:\\n```typescript\\n// aiService.ts 수정\\nexport const sendMessage = async (message: string, currentLanguage: string) => {\\n  const response = await apiService.post('/ai/chat', {\\n    message,\\n    language: currentLanguage\\n  });\\n};\\n```\\n\\n3. 백엔드 AI 라우트에서 언어별 시스템 프롬프트 적용\\n4. TTS 언어 코드도 선택된 언어로 설정\\n5. 날짜/시간 포맷을 언어별로 적용",
      "verificationCriteria": "아랍어 선택 시 RTL 레이아웃 적용됨, AI 응답이 선택된 언어로 제공됨, TTS 언어 설정 정상 작동",
      "analysisResult": "CirclePay Global 모바일 앱의 다국어 국제화(i18n) 구현. 기존 AppContext 패턴을 완전히 준수하면서 6개 언어(한국어, 영어, 중국어, 아랍어, 프랑스어, 독일어) 지원 추가. react-i18next 라이브러리 사용하여 모든 하드코딩된 텍스트를 번역 키로 변환하고, 프로필 화면에서 언어 선택 가능하도록 구현.",
      "summary": "RTL 언어 지원 및 백엔드 AI 연동 완료. AppContext에 RTL 감지 및 스타일 헬퍼 함수 추가, AIAssistantScreen에 아랍어 RTL 레이아웃 지원 구현. AI 서비스에 언어 파라미터 추가하여 백엔드로 전달, 백엔드에서 언어별 동적 시스템 프롬프트 생성으로 각 언어에 최적화된 AI 응답 제공. TTS 언어 설정과 날짜 포맷팅도 사용자 언어에 맞춰 동적 적용.",
      "completedAt": "2025-08-25T12:55:54.519Z"
    }
  ]
}